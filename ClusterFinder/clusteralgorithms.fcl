BEGIN_PROLOG

standard_houghbasealg:
{
  MaxLines:                 50   # The maximum number of Hough lines to look for, 20 had been working!
  MinHits:                  5    # 10 was working, 5 may be a little bit better (okay, a lot better!)
  SaveAccumulator:          0
  NumAngleCells:            20000 # The number of angle cells to create for the Hough transform, 
                                 # was set to 20000
  RhoResolutionFactor:      5    # Was set to 5
  MaxDistance:              1.0  # 0.1 was working (okay, not really, larger is probably better, 
                                 # e.g. 5, or 1, 1 is probably best)
  MaxSlope:                 80.0 # 80 was working fine previously
  RhoZeroOutRange:          0
  ThetaZeroOutRange:        0
  HitsPerCluster:           1
  MissedHits:               1    # Was set to 0
  DoHoughLineMerge:         1    # Turns on Hough line merging (0-off, 1-on)
  HoughLineMergeAngle:      15   # The maximum angle between slopes of Hough lines to be merged, 
                                 # 30 was working, 20 might be better
  HoughLineMergeCutoff:     5    # The maximum distance between Hough line endpoints before they can be merged, 
                                 # 2 was working, a larger value is likely necessary though, like 5
  DoParaHoughLineMerge:     0    # Turns on parallel Hough line merging (0-off, 1-on)
  ParaHoughLineMergeAngle:  5    # The maximum angle between slopes of Hough lines to be merged, 
                                 # 30 was working, 20 might be better
  ParaHoughLineMergeCutoff: 10   # The maximum distance between Hough line endpoints before 
                                 # they can be merged, 
                                 # 2 was working, a larger value is likely necessary though, like 5 or 10
  LineIsolationCut:         0.1  # The cut on the Hough lines isolation
  EndPointCutoff:           0
}


standard_endpointalg:
{
  TimeBins:            256
  MaxCorners:          20
  Gsigma:              1.
  Window:              5
  Threshold:           0.1
  SaveVertexMap:       -1
}

standard_dbscanalg:
{
  eps:    1.0
  epstwo: 1.5
  minPts: 2
  Method: 0   # 0 -- naive findNeighbor implemention                     
              # 1 -- findNeigbors with R*-tree                           
              # 2 -- DBScan from the paper with R*-tree                  
  Metric: 3   # Which RegionQuery distance metric to use.                
              # **ONLY APPLIES** if Method is 1 or 2.                    
              #                                                          
	      # 0 -- rectangle (no bad channels) **not implemented**     
	      # 1 -- Manhattan distance (only uses eps, no bad channels) 
              #                                  **not implemented**     
	      # 2 -- Eliptical (no bad channels) **not implemented**     
	      # 3 -- findNeighbors-alike: Elliptical and bad             
              #                           channel aware (not working)    
}

standard_fuzzyclusteralg:
{
  eps:             1.0
  epstwo:          1.5
  minPts:          2
  Method:          2   # 0 -- naive findNeighbor implemention                     
                       # 1 -- findNeigbors with R*-tree                           
                       # 2 -- Use fuzzy clustering                               
  Metric:          3   # Which RegionQuery distance metric to use.                
                       # **ONLY APPLIES** if Method is 1 or 2.                    
                       #                                                          
	               # 0 -- rectangle (no bad channels) **not implemented**     
	               # 1 -- Manhattan distance (only uses eps, no bad channels) 
                       #                                  **not implemented**     
	               # 2 -- Eliptical (no bad channels) **not implemented**     
	               # 3 -- findNeighbors-alike: Elliptical and bad             
                       #                           channel aware (not working)    
  Fuzzifier:      2    # The fuzzifier (m) needed for fuzzy clustering
  MaxClusters:    10   # The maximum number of clusters to try, needed for fuzzy clustering, was 5
  Iterations:     100  # The maximum number of iterations to try, needed for fuzzy clustering, was 10
  MergeCutoff:    10   # The maximum distance between clusters prior to merging,  
                       #needed for fuzzy clustering, 10 was what was used before

  HoughBaseAlg:    @local::standard_houghbasealg
  EndPointClusAlg: @local::standard_endpointalg
}

standard_dbscanalg_fast:        @local::standard_dbscanalg
standard_dbscanalg_fast.eps:    1.25
standard_dbscanalg_fast.epstwo: 1.75
standard_dbscanalg_fast.Method: 2


argoneut_dbscanalg:       @local::standard_dbscanalg
argoneut_fuzzyclusteralg: @local::standard_fuzzyclusteralg 
argoneut_houghbasealg:    @local::standard_houghbasealg
argoneut_houghbasealg.MaxLines: 15
argoneut_houghbasealg.MinHits: 3
argoneut_houghbasealg.NumAngleCells: 5000
argoneut_houghbasealg.MaxDistance: 5.0
argoneut_endpointalg:     @local::standard_endpointalg

microboone_dbscanalg:       @local::standard_dbscanalg_fast
microboone_endpointalg:     @local::standard_endpointalg
microboone_houghbasealg:    @local::standard_houghbasealg 
microboone_houghbasealg.MaxLines: 20
microboone_houghbasealg.MaxDistance: 1.0
microboone_houghbasealg.MinHits: 5
microboone_houghbasealg.NumAngleCells: 20000
microboone_houghbasealg.DoHoughLineMerge: 1
microboone_houghbasealg.HoughLineMergeAngle: 30
microboone_houghbasealg.HoughLineMergeCutoff: 5
microboone_fuzzyclusteralg: @local::standard_fuzzyclusteralg 
microboone_fuzzyclusteralg.HoughBaseAlg: @local::microboone_houghbasealg 

lbne_dbscanalg:    @local::standard_dbscanalg_fast
lbne_houghbasealg: @local::standard_houghbasealg
lbne_endpointalg:  @local::standard_endpointalg 

END_PROLOG
