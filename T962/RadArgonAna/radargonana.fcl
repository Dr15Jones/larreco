#include "job/services.fcl"
 
#include "job/geometry.fcl"
#include "job/larproperties.fcl"
#include "job/larfft.fcl"
#include "job/caldata.fcl"
#include "job/hitfindermodules.fcl"
#include "job/clustermodules.fcl"
#include "job/trackfindermodules.fcl"
#include "job/matchtracksmodule.fcl"
#include "job/vertexfindermodules.fcl"
#include "job/analysistreemodule.fcl"

#include "job/radargonanamodules.fcl"


process_name: RadArgonAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "radargonana_hist.root" }
  user:         @local::argoneut_services
  RandomNumberGenerator: {}
}


#source is now a root file
source:
{
  module_type: RootInput
  fileNames: ["/argoneut/data/rootfiles_ART_MINOS/Neutrino/R629_E10483-E12482.root"]
  maxEvents:  -1      # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_reco.root"
 }

 
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
  #  caldata: { module_type: }
  #  ffthit: { module_type: }
  #  dbcluster: { module_type: } 
  }

  analyzers:
  {
    radargon: {module_type: RadArgonAna}
  }


# recopath: [ caldata, ffthit, dbcluster, hough, linemerger, vertex2d, spacepts, track3d, matchtracks  ]
 recopath: [ caldata , ffthit , dbcluster ]
 anapath:  [ radargon ]
 stream1:  [ out1 ]
 trigger_paths: [recopath] 
 end_paths:     [ anapath ] 
}


physics.producers.caldata:     @local::argoneut_calwire	
physics.producers.ffthit:      @local::argoneut_hitfinder	
physics.producers.dbcluster:   @local::argoneut_dbcluster	
physics.producers.hough:       @local::argoneut_houghlinefinder
physics.producers.linemerger:  @local::argoneut_linemerger
physics.producers.vertex2d:    @local::argoneut_vertex2d
physics.producers.track3d:     @local::argoneut_spacepts
#physics.producers.spacepts:    @local::argoneut_spacepts
#physics.producers.track3d:     @local::argoneut_kalman
physics.producers.matchtracks: @local::argoneut_matchtracks
physics.analyzers.radargon:    @local::argoneut_radargonana
