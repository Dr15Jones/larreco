#include "job/services.fcl"
 
#include "job/geometry.fcl"
#include "job/larproperties.fcl"
#include "job/larfft.fcl"
#include "job/caldata.fcl"
#include "job/fftfinder.fcl"
#include "job/clustermodules.fcl"
#include "job/clusterservices.fcl"
#include "job/trackfindermodules.fcl"
#include "job/kinematicsmodules.fcl"
#include "job/scanfilter.fcl"
#include "job/matchtracksmodule.fcl"
#include "job/vertexfindermodules.fcl"
#include "job/analysistreemodule.fcl"
#include "job/ccqeanalysistreemodule.fcl"


process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "standard_reco_hist.root" }
  Timing:       {}
  SimpleMemoryCheck:     { ignoreTotal: 1 } # default is one
  RandomNumberGenerator: {} #ART native random number generator
  user:         @local::argoneut_services
}


#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1      # Number of events to create
}

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "standard_reco.root" #default file name, can override from command line with -o or --output
//    SelectEvents: {SelectEvents: [reco] }
 }

 
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:{}

 filters:{} 

  analyzers:{}

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 // reco: [  scanfilt, caldata, ffthit, dbcluster, hough, linemerger, track3d  ] 
  reco: [   caldata, ffthit, dbcluster, hough, linemerger, vertex2d, kingacluster, spacepts, track3d, matchtracks  ]
// reco: [   caldata, ffthit, dbcluster, hough, linemerger, track3d  ]
 # reco: [ scanfilt ]
  ana: [ analysistree, ccqeanalysistree]
// ana: [matchtracks]
 #define the output stream, there could be more than one if using filters 
//  stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
   trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 // end_paths:     [ stream1, ana ] 
 end_paths:     [  ana ] 
}

# define the list of LArSoft modules to run through the simulate path
//physics.filters.scanfilt:    @local::argoneut_scanfilter
physics.producers.caldata:    @local::argoneut_calwire	
physics.producers.ffthit:     @local::argoneut_hitfinder	
physics.producers.dbcluster:    @local::argoneut_dbcluster	
physics.producers.hough:    @local::argoneut_houghlinefinder
physics.producers.linemerger: @local::argoneut_linemerger
physics.producers.vertex2d:     @local::argoneut_vertex2d
physics.producers.kingacluster: @local::argoneut_kingacluster
 physics.producers.spacepts:    @local::argoneut_spacepts
 physics.producers.track3d:   @local::argoneut_kalman
// physics.producers.track3d:  @local::argoneut_track
 physics.producers.matchtracks:    @local::argoneut_matchtracks
// physics.analyzers.kinematicsana:  @local::argoneut_kinematicsana
physics.analyzers.analysistree: @local::argoneut_analysistree
physics.analyzers.ccqeanalysistree: @local::argoneut_ccqeanalysistree
//physics.analyzers.kingaclusterana: @local::argoneut_kingaclusterana